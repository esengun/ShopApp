@*@page
@model ShopApp.WebUI.Views.Product.ListModel
@{
}*@
@model ProductViewModel

@{
	var popularClass = Model.Products.Count() > 1 ? "popular" : ""; // applies to a style
	var products = Model.Products; // declaring variables to be used in html
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	<title>Product</title>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
	<style>
		.popular {
			color: green;
			font-weight: 700;
		}
	</style>
</head>
<body>
	@await Html.PartialAsync("_navbar")
	@*@await Html.PartialAsync("_header")*@
	@*An alternative way to define partial*@
	<partial name="_header">

		<main>
			<div class="container">
				<div class="row">
					<div class="col-md-3">
						@*Categories will be here*@
						@await Component.InvokeAsync("Categories")
					</div>
					<div class="col-md-9">
						@*Products will be here*@
						@if (products.Count == 0)
						{
							@await Html.PartialAsync("_noproduct")
						}
						else
						{
							<div class="row">
								@foreach (var product in products)
								{
									<div class="col-md-3">
										@await Html.PartialAsync("_product", product)
									</div>
								}
							</div>
						}
					</div>
				</div>
			</div>
		</main>
</body>
</html>